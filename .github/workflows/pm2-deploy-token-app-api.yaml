name: deploy-token-app-api-production

on:
  push:
    # types: 
    # - closed
    branches:
    - develop
    paths:
    - 'packages/token-app-api/**'
    - '.github/workflows/pm2-deploy-token-app-api.yaml'
    - '.github/actions/pm2-run-deploy/*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: token-app-api
  DOCKER_HUB_WORKSPACE: passon
  SERVER_WORK_DIRECTORY: token-services

jobs:
  copy-file-to-server:
    # if: github.event.pull_request.merged == true
    runs-on: mac-mini-build
    # runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # Copy docker-compose and .env files to target server
    - name: show files
      run: |
        echo "${{ secrets.TOKEN_APP_API_ENV }}" > ./packages/${{ env.IMAGE_NAME }}/.env
        rsync -avh ./* root@${{ secrets.DEV_HOST }}:/opt/services//${{ env.SERVER_WORK_DIRECTORY }}/
  deploy-pm2-service:
    # if: github.event.pull_request.merged == true
    # runs-on: mac-mini-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Deploy newest code to production machine
      uses: appleboy/ssh-action@v1.1.0
      with:
        host: ${{ secrets.DEV_HOST }}
        username: root
        port: 22
        key: ${{ secrets.SSH_KEY_DEV_VALUE }}
        script: |
          source /root/.bashrc
          node --version
          # npm install -g yarn pm2
          # npm add --global nx@latest
          # yarn install
          # nx build ${{ inputs.module-name }}
          # pm2 start ./deploy/{{ inputs.module-name }}/ecosystem.config.js
